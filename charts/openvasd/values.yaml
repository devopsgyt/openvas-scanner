# Default values for openvasd.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# When you have access to the enterprise feed add the credentials for the private repository here.
# Additionally change notus and vulnerabilitytests accordingly.
imagePullSecrets: []
nameOverride: ""
storageClassName: ""

vulnerabilityservices:
  enabled: true
  scapdata:
    repository: registry.community.greenbone.net/community/scap-data
    pullPolicy: Always
    tag: "community"

  certdata:
    repository: registry.community.greenbone.net/community/cert-bund-data
    pullPolicy: Always
    tag: "community"

  dnfcertdata:
    repository: registry.community.greenbone.net/community/dfn-cert-data
    pullPolicy: Always
    tag: "community"

  dataobjects:
    repository: registry.community.greenbone.net/community/data-objects
    pullPolicy: Always
    tag: "community"

  reportsformats:
    repository: registry.community.greenbone.net/community/report-formats
    pullPolicy: Always
    tag: "community"

  gpgdata:
    repository: registry.community.greenbone.net/community/gpg-data
    pullPolicy: Always
    tag: "community"

  # Postgres DB for gvm
  postgresgvm:
    repository: registry.community.greenbone.net/community/pg-gvm
    pullPolicy: Always
    tag: "stable"
    pvc:
      accessMode: ReadWriteOnce
      size: 1Gi
  
  # Contains gvm-tools
  gvmtools:
    repository: registry.community.greenbone.net/community/gvm-tools
    pullPolicy: Always
    tag: "stable"

  # Contains gvm
  gvmd:
    repository: registry.community.greenbone.net/community/gvmd
    pullPolicy: Always
    tag: "stable"
    pvc:
      accessMode: ReadWriteOnce
      size: 1Gi

  # Contains gsa
  gsa:
    repository: registry.community.greenbone.net/community/gsa
    pullPolicy: Always
    tag: "stable"
    service:
      port: 80
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: "traefik"
      className: "traefik"
      hosts:
        - paths:
            - path: /
              pathType: Prefix 
              backend:
                service:
                  name: gsa
                  port:
                    number: 80

# Is currently reqired by openvasd to control openvas
ospd:
  repository: registry.community.greenbone.net/community/ospd-openvas
  pullPolicy: Always
  tag: "edge"
  pvc:
    accessMode: ReadWriteOnce
    size: 1Gi

# Contains openvasd
openvas:
  repository: registry.community.greenbone.net/community/openvas-scanner
  pullPolicy: Always
  tag: "edge"
  pvc:
    accessMode: ReadWriteOnce
    size: 1Gi

# NASL scripts also known as feed
vulnerabilitytests:
  # latest is the most current community feed.
  repository: registry.community.greenbone.net/community/vulnerability-tests
  pullPolicy: Always
  tag: "community"
  pvc:
    accessMode: ReadWriteOnce
    size: 1Gi

# Notus description json also known as feed
notusdata:
  # latest is the most current community feed.
  repository: registry.community.greenbone.net/community/notus-data
  pullPolicy: Always
  tag: "community"
  pvc:
    accessMode: ReadWriteOnce
    size: 1Gi

# required by openvas and ospd
redis:
  repository: greenbone/redis-server
  pullPolicy: Always
  tag: "latest"

# Configuration of openvasd
openvasd: 
  # Sets the log level and changes the verbosity of openvasd.
  # Can be set to TRACE, DEBUG, INFO, WARNING, ERROR
  # openvasd is provided by the openvas image
  loglevel: DEBUG
  # When set it will be the used API-KEY. It is not required when deploy_client is true.
  # apikey: changeme
  # can be either service: fill openvasd capabilities, service_notus: only notus
  mode: service
  # can be either:
  # - openvas, use openvas and redis 
  # - ospd, use ospd-openvas 
  scanner_type: openvas 
  # can be either:
  # - redis, when scanner_type is set to openvas it has to redis and this field is ignored
  # - in_memory, uses a in memory storage
  # - fs, uses a file system storage
  storage_type: redis
  tls:
    # enables the server-/client-certs deployment via secret 
    # server-key
    # client-certs
    # deplying a client certificate without a server certificate will not have any effect.
    certificates:
      deploy_server: true
      deploy_client: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  # type: LoadBalancer
  port: 8080

# enables routing.yaml
routing:
  enabled: true

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "traefik"
  className: "traefik"
  hosts:
    # Captures everything of / delegates it to openvasd although this is not feasible
    # on deployments that contain multiple http services our current deployment model
    # sees a sensor as an own machine.
    # Currently it is configures with http instead of https in mind
    # Do not use it in production environments.
    - paths:
        - path: /
          pathType: Prefix 
          backend:
            service:
              name: openvasd
              port:
                number: 8080